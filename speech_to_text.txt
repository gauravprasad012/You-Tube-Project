import speech_recognition as sr 
import csv
AUDIO_FILE = ("") 
r = sr.Recognizer() 
with sr.AudioFile(AUDIO_FILE) as source: 
    #reads the audio file. Here we use record instead of 
    #listen 
    r.adjust_for_ambient_noise(source, duration=0.5)
    audio1 = r.record(source, duration=15)   
    audio2 = r.record(source, duration=15)
    audio3= r.record(source, duration=15)
    audio4= r.record(source, duration=15)
try: 
    s=r.recognize_google(audio1)
    t=r.recognize_google(audio2)
    f=r.recognize_google(audio3)
    u=r.recognize_google(audio4)
    		 
  
except sr.UnknownValueError: 
    print("Google Speech Recognition could not understand audio") 
print(s)
print(t)
print(f)
print(u)
import re, math
from collections import Counter
WORD = re.compile(r'\w+')
def get_cosine(vec1, vec2):
     intersection = set(vec1.keys()) & set(vec2.keys())
     numerator = sum([vec1[x] * vec2[x] for x in intersection])

     sum1 = sum([vec1[x]**2 for x in vec1.keys()])
     sum2 = sum([vec2[x]**2 for x in vec2.keys()])
     denominator = math.sqrt(sum1) * math.sqrt(sum2)

     if not denominator:
        return 0.0
     else:
        return float(numerator) / denominator
def text_to_vector(text):
     words = WORD.findall(text)
     return Counter(words)
text2 = ''
cosine = get_cosine(vector2, vector1)
cosine2 = get_cosine(vector2,vector3)
cosine3 = get_cosine(vector2,vector4)
cosine4 = get_cosine(vector2,vector5)
 z=(cosine+cosine2+cosine3+cosine4)/4
 print(z)
print(max(cosine,cosine2,cosine3,cosine4))
print(s+t+f+u)




